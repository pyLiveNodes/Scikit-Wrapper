[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    docs,
    {py38,py39},
    report
ignore_basepython_conflict = false
isolated_build = true

[testenv]
basepython =
    py38: python3.8
    py39: python3.9
    {clean,check,reformat,coverage,docs}: python3
   .package: python3
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
    PIP_EXTRA_INDEX_URL=https://package_puller:8qYs4hBAsmAHJ5AdS_y9@gitlab.csl.uni-bremen.de/api/v4/groups/368/-/packages/pypi/simple
passenv =
    *
usedevelop = false
deps =
    pytest
    pytest-cov
commands =
    {posargs:pytest --cov --cov-report=term-missing -vv --junitxml=dist/tests/report.xml tests}

[testenv:check]
deps =
    docutils
    check-manifest
    readme-renderer
    pygments
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    isort --verbose --check-only --diff --filter-files .

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
whitelist_externals = rm
commands =
    rm -rf docs/modules && mkdir docs/modules
    sphinx-apidoc -f -o docs/modules src/ln_scikit
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage xml -o dist/tests/coverage.xml

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
